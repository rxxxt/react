{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","src","photo","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","messagesPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCcnKC,EAXI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,yBAAKC,IAAKP,EAAMQ,QAChB,kBAAC,IAAD,CAASC,GAAIR,GAAOD,EAAMU,QCCvBC,EARC,SAACX,GACb,OACI,yBAAKG,UAAWC,IAAEQ,SACbZ,EAAMY,U,kCCEbC,EAAcC,YAAiB,IAuC/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAAChB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOV,KAAK,iBAAiBW,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcY,YAAa,wBAEtG,6BACI,6CAQDC,EAvCC,SAAC1B,GACb,IAAI2B,EAAQ3B,EAAM4B,aACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYxB,MAAOwB,EAAExB,MAAOE,KAAMsB,EAAEtB,KAAMR,GAAI8B,EAAE9B,QACzF+B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,aAMnE,OACI,yBAAKT,UAAWC,IAAE0B,SACd,yBAAK3B,UAAWC,IAAEgC,cACbP,GAEL,yBAAK1B,UAAWC,IAAE8B,UACd,6BAAMD,GACN,6BACI,kBAAClB,EAAD,CAAqBG,SAZjB,SAACmB,GACjBrC,EAAMsC,YAAYD,EAAOE,uB,gDCZ7BC,EAA6B,SAACb,GAAD,MAAY,CACzCc,OAAQd,EAAMe,KAAKD,S,OCQRE,sBACXC,aAPkB,SAACjB,GACnB,MAAO,CACHC,aAAcD,EAAMC,gBAKC,CAACU,mBDNE,SAACO,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK/C,MAAMyC,OAET,kBAACI,EAAcE,KAAK/C,OAFI,kBAAC,IAAD,CAAUS,GAAI,eAHV,GACXuC,IAAMH,WAUtC,OAFqCD,YAAQJ,EAARI,CAAoCE,KCJ9DH,CAGbjB","file":"static/js/5.0c7f05fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2UqGR\",\"dialogsItems\":\"Dialogs_dialogsItems__2T9Z1\",\"dialog\":\"Dialogs_dialog__TZZTG\",\"messages\":\"Dialogs_messages__2H0Hx\",\"message\":\"Dialogs_message__1T5F2\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src={props.photo}/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem photo={d.photo} name={d.name} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newMessageBody\" component={Textarea} validate={[required, maxLength50]} placeholder={'Enter your message'}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport {sendMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}