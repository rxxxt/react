{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["Textarea","input","meta","touched","error","props","hasError","className","styles","formControl","Input","module","exports","required","value","maxLengthCreator","maxLength","length","DialogItem","path","id","s","dialog","active","src","photo","to","name","Message","message","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","state","messagesPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"mNAGaA,EAAW,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,MAA6C,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAWC,EAAW,gCAC7DC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,6BACI,8CAAcH,EAAWI,KAE5BC,GAAY,8BAAOF,KAKnBM,EAAQ,SAAC,GAA+C,IAA9CT,EAA6C,EAA7CA,MAA6C,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAWC,EAAW,gCAC1DC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,6BACI,2CAAWH,EAAWI,KAEzBC,GAAY,8BAAOF,M,oBCrBhCO,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,+B,iCCD3E,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCLlCL,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,8FCcnKM,EAXI,SAACb,GAChB,IAAIc,EAAO,YAAcd,EAAMe,GAE/B,OACI,yBAAKb,UAAWc,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,yBAAKC,IAAKnB,EAAMoB,QAChB,kBAAC,IAAD,CAASC,GAAIP,GAAOd,EAAMsB,QCCvBC,EARC,SAACvB,GACb,OACI,yBAAKE,UAAWc,IAAEQ,SACbxB,EAAMwB,U,oCCEbC,EAAcf,YAAiB,IAuC/BgB,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAAC3B,GACpB,OACI,0BAAM6B,SAAU7B,EAAM8B,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOT,KAAK,iBAAiBU,UAAWrC,IAAUsC,SAAU,CAACzB,IAAUiB,GAAcS,YAAa,wBAEtG,6BACI,6CAQDC,EAvCC,SAACnC,GACb,IAAIoC,EAAQpC,EAAMqC,aACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,MAAOqB,EAAErB,MAAOE,KAAMmB,EAAEnB,KAAMP,GAAI0B,EAAE1B,QACzF2B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASpB,QAASoB,EAAEpB,aAMnE,OACI,yBAAKtB,UAAWc,IAAEuB,SACd,yBAAKrC,UAAWc,IAAE6B,cACbP,GAEL,yBAAKpC,UAAWc,IAAE2B,UACd,6BAAMD,GACN,6BACI,kBAAChB,EAAD,CAAqBG,SAZjB,SAACiB,GACjB9C,EAAM+C,YAAYD,EAAOE,uB,+CCZ7BC,EAA6B,SAACb,GAAD,MAAY,CACzCc,OAAQd,EAAMe,KAAKD,S,QCQRE,sBACXC,aAPkB,SAACjB,GACnB,MAAO,CACHC,aAAcD,EAAMC,gBAKC,CAACU,mBDNE,SAACO,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKxD,MAAMkD,OAET,kBAACI,EAAcE,KAAKxD,OAFI,kBAAC,IAAD,CAAUqB,GAAI,eAHV,GACXoC,IAAMH,WAUtC,OAFqCD,YAAQJ,EAARI,CAAoCE,KCJ9DH,CAGbjB","file":"static/js/6.98b4e1a4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const Textarea = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1w6hP\",\"error\":\"FormsControls_error___FXIS\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is Required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2UqGR\",\"dialogsItems\":\"Dialogs_dialogsItems__2T9Z1\",\"dialog\":\"Dialogs_dialog__TZZTG\",\"messages\":\"Dialogs_messages__2H0Hx\",\"message\":\"Dialogs_message__1T5F2\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src={props.photo}/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem photo={d.photo} name={d.name} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newMessageBody\" component={Textarea} validate={[required, maxLength50]} placeholder={'Enter your message'}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport {sendMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}