{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","assets/img/userPhoto.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/MyPost.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPost/Post/Post.js","components/Profile/MyPost/MyPost.js","components/Profile/MyPost/MyPostContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["Textarea","input","meta","touched","error","props","hasError","className","styles","formControl","Input","module","exports","required","value","maxLengthCreator","maxLength","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","c","descriptionBlock","src","photos","large","userPhoto","fullName","Post","item","message","like","maxLength10","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","placeholder","validate","MyPost","postsElements","posts","map","p","post","likeCounter","postBlock","values","addPost","newPostText","MyPostContainer","connect","state","profilePage","Profile","ProfileContainer","userId","this","match","params","isAuth","authorizedUserId","history","setProfile","getUserStatus","React","Component","compose","auth","withRouter"],"mappings":"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","file":"static/js/4.f0963fff.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const Textarea = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1w6hP\",\"error\":\"FormsControls_error___FXIS\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is Required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","module.exports = __webpack_public_path__ + \"static/media/userPhoto.25452ffd.png\";","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__13k_d\",\"item\":\"ProfileInfo_item__3KAXj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPost_postBlock__CWljW\",\"post\":\"MyPost_post__1XYbk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2RGjs\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    let deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"_______\"}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={deActivateEditMode}\r\n                       value={status}/>\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport c from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport userPhoto from \"../../../assets/img/userPhoto.png\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={c.descriptionBlock}>\r\n                <img src={profile.photos.large != null ? profile.photos.large : userPhoto}/>\r\n                {profile.fullName}\r\n            </div>\r\n            <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport c from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={c.item}>\r\n            <img src='https://i03.fotocdn.net/s119/11a097ff366bfb24/user_l/2713047325.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.like}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport c from \"./MyPost.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPost = (props) => {\r\n    let postsElements = props.posts.map(p => <Post message={p.post} like={p.likeCounter}/>);\r\n\r\n    let AddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={c.postBlock}>\r\n            <h3>My post</h3>\r\n            <AddPostFormRedux onSubmit={AddPost}/>\r\n            <div className={c.post}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MyPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} placeholder={'Post message'}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'AddPostForm'})(MyPostForm);\r\n\r\nexport default MyPost;","import React from \"react\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect (mapStateToProps, {addPost}) (MyPost);\r\n\r\nexport default MyPostContainer;","import React from \"react\";\r\nimport c from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostContainer from \"./MyPost/MyPostContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (<div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostContainer/>\r\n    </div>);\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserStatus, setProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId && this.props.isAuth) {\r\n            userId = this.props.authorizedUserId;\r\n        } if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        this.props.setProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (<Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>);\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setProfile, getUserStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}