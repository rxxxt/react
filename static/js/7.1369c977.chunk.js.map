{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Login/Login.module.css","components/Login/Login.js"],"names":["Textarea","input","meta","touched","error","props","hasError","className","styles","formControl","Input","module","exports","required","value","maxLengthCreator","maxLength","length","maxLength20","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","placeholder","validate","name","component","type","c","formSummaryError","connect","state","isAuth","auth","login","logout","to","formData","email","password","rememberMe"],"mappings":"mNAGaA,EAAW,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,MAA6C,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAWC,EAAW,gCAC7DC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,6BACI,8CAAcH,EAAWI,KAE5BC,GAAY,8BAAOF,KAKnBM,EAAQ,SAAC,GAA+C,IAA9CT,EAA6C,EAA7CA,MAA6C,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAWC,EAAW,gCAC1DC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,6BACI,2CAAWH,EAAWI,KAEzBC,GAAY,8BAAOF,M,oBCrBhCO,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,+B,iCCD3E,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCLlCL,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,iBAAmB,kC,iCCDlE,wGASMM,EAAcH,YAAiB,IAsB/BI,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EApBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAclB,EAAW,EAAXA,MAC9B,OACI,0BAAMmB,SAAUD,GACZ,6BACI,kBAAC,IAAD,CAAOE,YAAa,QAASC,SAAU,CAACZ,IAAUK,GAAcQ,KAAM,QAASC,UAAWjB,OAE9F,6BACI,kBAAC,IAAD,CAAOc,YAAa,WAAYC,SAAU,CAACZ,IAAUK,GAAcQ,KAAM,WAAYE,KAAM,WAAYD,UAAWjB,OAEtH,6BACI,kBAAC,IAAD,CAAOiB,UAAWjB,IAAOgB,KAAM,aAAcE,KAAM,aADvD,eAGCxB,GAAS,yBAAKG,UAAWsB,IAAEC,kBAAmB1B,GAC/C,6BACI,8CA2BD2B,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,UAAOC,YAAjCL,EAnBD,SAAC1B,GAKX,OAAIA,EAAM4B,OACC,kBAAC,IAAD,CAAUI,GAAI,aAGlB,yBAAK9B,UAAWsB,IAAEM,OACrB,qCACA,kBAAChB,EAAD,CAAgBI,SAVH,SAACe,GACdjC,EAAM8B,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.1369c977.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const Textarea = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1w6hP\",\"error\":\"FormsControls_error___FXIS\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is Required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3iIWe\",\"formSummaryError\":\"Login_formSummaryError__1WhFR\"};","import React from \"react\";\r\nimport c from \"./Login.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} validate={[required, maxLength20]} name={\"email\"} component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} validate={[required, maxLength20]} name={\"password\"} type={\"password\"} component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/>remember me\r\n            </div>\r\n            {error && <div className={c.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div className={c.login}>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login, logout})(Login);"],"sourceRoot":""}